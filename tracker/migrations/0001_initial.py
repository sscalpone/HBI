# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import models, migrations


class Migration(migrations.Migration):

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BasicInfo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
            ],
            options={
                'db_table': 'tracker_basicinfo',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Child',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('first_name', models.CharField(max_length=200)),
                ('last_name', models.CharField(max_length=200)),
                ('birthdate', models.DateField()),
                ('birthplace', models.CharField(max_length=200)),
                ('intake_date', models.DateField()),
                ('photo', models.ImageField(upload_to=b'photos')),
            ],
            options={
                'db_table': 'tracker_child',
                'verbose_name_plural': 'Children',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='CurrentMedsList',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('med_name', models.TextField()),
                ('dose', models.TextField()),
                ('frequency', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
            ],
            options={
                'db_table': 'tracker_currentmedslist',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DentalExam',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date', models.DateField()),
                ('recommendation', models.TextField()),
                ('child', models.ForeignKey(to='tracker.Child')),
            ],
            options={
                'db_table': 'tracker_dentalexam',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='DentalExamDiagnosis',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('diagnosis_notes', models.TextField()),
                ('exam', models.ForeignKey(to='tracker.DentalExam')),
            ],
            options={
                'db_table': 'tracker_dentalexamdiagnosis',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MedicalExamDiagnosis',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.TextField()),
                ('value', models.TextField()),
            ],
            options={
                'db_table': 'tracker_medicalexamdiagnosis',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MedicalExamPart1',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date', models.DateField()),
                ('background_notes', models.TextField()),
                ('birth_history', models.TextField()),
                ('bcg_vaccine', models.BooleanField()),
                ('bcg_vaccine_date', models.DateField()),
                ('polio_vaccine', models.BooleanField()),
                ('polio_vaccine_date', models.DateField()),
                ('dpt_vaccine', models.BooleanField()),
                ('dpt_vaccine_date', models.DateField()),
                ('hepatitis_b_vaccine', models.BooleanField()),
                ('hepatitis_b_vaccine_date', models.DateField()),
                ('flu_vaccine', models.BooleanField()),
                ('flu_vaccine_date', models.DateField()),
                ('yellow_fever_vaccine', models.BooleanField()),
                ('yellow_fever_vaccine_date', models.DateField()),
                ('spr_vaccine', models.BooleanField()),
                ('spr_vaccine_date', models.DateField()),
                ('hpv_vaccine', models.BooleanField()),
                ('hpv_vaccine_date', models.DateField()),
                ('pneumococcal_vaccine', models.BooleanField()),
                ('pneumococcal_vaccine_date', models.DateField()),
                ('weight', models.FloatField()),
                ('height', models.FloatField()),
                ('elisa_vh1_positive', models.BooleanField()),
                ('hepatitisB_positive', models.BooleanField()),
                ('PPD_positive', models.BooleanField()),
                ('stool_parasites_positive', models.BooleanField()),
                ('stool_parasites_notes', models.TextField()),
                ('leukocytes_normal', models.BooleanField()),
                ('leukocytes_notes', models.TextField()),
                ('nitrites_normal', models.BooleanField()),
                ('nitrites_notes', models.TextField()),
                ('urobilinogen_normal', models.BooleanField()),
                ('urobilinogen_notes', models.TextField()),
                ('protein_normal', models.BooleanField()),
                ('protein_notes', models.TextField()),
                ('pH_normal', models.BooleanField()),
                ('pH_notes', models.TextField()),
                ('hemoglobin_normal', models.BooleanField()),
                ('hemoglobin_notes', models.TextField()),
                ('density_normal', models.BooleanField()),
                ('density_notes', models.TextField()),
                ('glucose_normal', models.BooleanField()),
                ('glucose_notes', models.TextField()),
                ('child', models.ForeignKey(to='tracker.Child')),
            ],
            options={
                'db_table': 'tracker_medicalexampart1',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='MedicalExamPart2',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date', models.DateField()),
                ('illness_notes', models.TextField()),
                ('appetite_notes', models.TextField()),
                ('sleep_notes', models.TextField()),
                ('concerns_notes', models.TextField()),
                ('blood_pressure', models.TextField()),
                ('pulse', models.TextField()),
                ('visual_acuity_left', models.TextField()),
                ('visual_acuity_right', models.TextField()),
                ('appearance_normal', models.BooleanField()),
                ('appearance_notes', models.TextField()),
                ('skin_mucosa_normal', models.BooleanField()),
                ('skin_mucosa_notes', models.TextField()),
                ('TCSC_lymph_normal', models.BooleanField()),
                ('TCSC_lymph_notes', models.TextField()),
                ('head_neck_normal', models.BooleanField()),
                ('head_neck_notes', models.TextField()),
                ('thorax_lungs_normal', models.BooleanField()),
                ('thorax_lungs_notes', models.TextField()),
                ('cardio_normal', models.BooleanField()),
                ('cardio_notes', models.TextField()),
                ('abdomen_normal', models.BooleanField()),
                ('abdomen_notes', models.TextField()),
                ('genitourinary_normal', models.BooleanField()),
                ('genitourinary_notes', models.TextField()),
                ('extremities_normal', models.BooleanField()),
                ('extremities_notes', models.TextField()),
                ('neurological_normal', models.BooleanField()),
                ('neurological_notes', models.TextField()),
                ('recommendations', models.TextField()),
                ('child', models.ForeignKey(to='tracker.Child')),
            ],
            options={
                'db_table': 'tracker_medicalexampart2',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PastMedsList',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('med_name', models.TextField()),
                ('dose', models.TextField()),
                ('frequency', models.TextField()),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('exam', models.ForeignKey(to='tracker.MedicalExamPart2')),
            ],
            options={
                'db_table': 'tracker_pastmedslist',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PsychologicalExam',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date', models.DateField()),
                ('background_notes', models.TextField()),
                ('physical_description', models.TextField()),
                ('intelectual_notes', models.TextField()),
                ('organicity_notes', models.TextField()),
                ('psychomotor_notes', models.TextField()),
                ('emotional_notes', models.TextField()),
                ('recommendation', models.TextField()),
                ('child', models.ForeignKey(to='tracker.Child')),
            ],
            options={
                'db_table': 'tracker_psychologicalexam',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='PsychologicalExamDiagnosis',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('diagnoses', models.TextField()),
                ('diagnoses_cie_dsm9', models.TextField()),
                ('exam', models.ForeignKey(to='tracker.PsychologicalExam')),
            ],
            options={
                'db_table': 'tracker_psychologicalexamdiagnosis',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Residence',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('residence_name', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'tracker_residence',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='Signature',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('name', models.CharField(max_length=200)),
                ('surname', models.CharField(max_length=200)),
                ('emp', models.CharField(max_length=200)),
                ('direction', models.CharField(max_length=200)),
                ('cell', models.CharField(max_length=200)),
            ],
            options={
                'db_table': 'tracker_signature',
            },
            bases=(models.Model,),
        ),
        migrations.CreateModel(
            name='SocialExam',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('date', models.DateField()),
                ('has_birth_certificate', models.BooleanField()),
                ('original_birth_certificate', models.BooleanField()),
                ('dni', models.BooleanField()),
                ('dni_in_process', models.BooleanField()),
                ('dni_no_comments', models.TextField(blank=True)),
                ('sis', models.BooleanField()),
                ('sis_in_process', models.BooleanField()),
                ('sis_no_comments', models.TextField(blank=True)),
                ('antecedents', models.TextField()),
                ('family_situation', models.TextField()),
                ('health_situation', models.TextField()),
                ('housing_situation', models.TextField()),
                ('economic_situation', models.TextField()),
                ('general_comments', models.TextField()),
                ('visitors_allowed', models.BooleanField()),
                ('visitors_allowed_no_comments', models.TextField(blank=True)),
                ('social_diagnosis', models.TextField()),
                ('recommendation', models.TextField()),
                ('child', models.ForeignKey(to='tracker.Child')),
            ],
            options={
                'db_table': 'tracker_socialexam',
            },
            bases=(models.Model,),
        ),
        migrations.AddField(
            model_name='medicalexamdiagnosis',
            name='exam',
            field=models.ForeignKey(to='tracker.MedicalExamPart2'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='currentmedslist',
            name='exam',
            field=models.ForeignKey(to='tracker.MedicalExamPart2'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='child',
            name='residence',
            field=models.ForeignKey(to='tracker.Residence'),
            preserve_default=True,
        ),
        migrations.AddField(
            model_name='basicinfo',
            name='child',
            field=models.ForeignKey(to='tracker.Child'),
            preserve_default=True,
        ),
    ]
